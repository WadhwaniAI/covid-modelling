# Driver config has three parts:
#   configs: list of base config names
#   iterate: condensed partial config with choices used across all base configs
#   constant: condensed partial config with choices specific to each base config

# Each terminal element has the structure [pattern, choices, select]
# pattern: the method of specification of the choices
#   - list: list of choices
#   - repeat: value, num_repetitions
#   - range: start, stop (exclusive), step
#   - date_range: start, stop, periods, freq (specify EXACTLY three as per pd.date_range)
# choices: representation of values using one of the above patterns
# select: if True, produce combinations for this element else use default value from base config
#2020-10-01
# Use generate_configs_from_driver (utils/generic/config.py) to generate all configs.

configs: [athena]
iterate:
    fitting:
        optimiser_params:
            seed: [list, [100, 200, 300, 400, 500], TRUE]
constant:
    athena:
        fitting:
            default_params:
                P_fatal: [list, [0.06200997861724880, 0.06574761399787910, 0.07047553882996920, 0.061925601750547000, 0.07755859045692130, 0.08442738840638250, 0.07049180327868850, 0.0725136482316639, 0.05739072405739070, 0.05082382762991130, 0.0481786133960047, 0.047381849107034400, 0.04629261175222180, 0.040410132689987900, 0.04485941189096370], TRUE]
            split:
                start_date : [date_range, [2020-04-13, 2020-07-20, null, 7D], TRUE]
