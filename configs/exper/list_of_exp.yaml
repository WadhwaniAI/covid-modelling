# Driver config has three parts:
#   configs: list of base config names
#   base: condensed partial config with choices used across all base configs
#   specific: condensed partial config with choices specific to each base config

# Each terminal element has the structure [pattern, choices, select]
# pattern: the method of specification of the choices
#   - list: list of choices
#   - repeat: value, num_repetitions
#   - range: start, stop (exclusive), step
#   - date_range: start, stop, periods, freq (specify EXACTLY three as per pd.date_range)
# choices: representation of values using one of the above patterns
# select: if True, produce combinations for this element else use default value from base config

# Use generate_configs_from_driver (utils/generic/config.py) to generate all configs.

configs: [default]
base:
    fitting:
        fitting_method_params:
            algo: [list, [tpe, rand], FALSE]
            num_evals: [repeat, [3000, 3], FALSE]
        split:
            train_period: [range, [6, 45, 3], FALSE]
            val_period: [range, [2, 7, 1], FALSE]
        loss:
            loss_method: [list, [mape, rmse, rmsle], FALSE]
specific:
    default:
        fitting:
            split:
                start_date: [date_range, [2020-04-26, null, 1, D], FALSE] # NOTE: set config end date to null
        uncertainty:
            uncertainty_params:
                date_of_sorting_trials: [date_range, [2020-06-26, null, 1, D], FALSE]
